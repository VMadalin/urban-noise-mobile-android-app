# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

name: Release

trigger:
  - master

pool:
  vmImage: 'macos-latest'

steps:

  # Config environment vars
  - script: |
      echo "sign.store.file=$(SIGN_STORE_FILE)" >> local.properties
      echo "sign.store.password=$(SIGN_STORE_PASSWORD)" >> local.properties
      echo "sign.key.alias=$(SIGN_KEY_ALIAS)" >> local.properties
      echo "sign.key.password=$(SIGN_KEY_PASSWORD)" >> local.properties

      echo "play.publisher.track=$(PLAY_PUBLISHER_TRACK)" >> local.properties
      echo "play.publisher.service.file=$(PLAY_PUBLISHER_SERVICE_FILE)" >> local.properties
    displayName: 'Config environment vars'

  # Decrypt sign secrets
  - task: Bash@3
    displayName: Decrypt SignSecrets
    inputs:
      filePath: '$(System.DefaultWorkingDirectory)/scripts/release/signing-setup.sh'
      arguments: '$(SIGN_ENCRYPT_KEY)'

  # Download Secret File UploadKeystore
  - task: DownloadSecureFile@1
    name: uploadKeystore
    displayName: Download UploadKeystore
    inputs:
      secureFile: 'urbannoise-mobile-android-upload-keystore.jks'

  # Download Secret File PlayAccount
  - task: DownloadSecureFile@1
    name: playAccount
    displayName: Download PlayAccount
    inputs:
      secureFile: 'urbannoise-mobile-android-play-account.json'

  # Add Secret Files
  - script: |
      cp $(uploadKeystore.secureFilePath) $(System.DefaultWorkingDirectory)
      cp $(playAccount.secureFilePath) $(System.DefaultWorkingDirectory)
    displayName: 'Add Secret Files'

  # Publish Release
  - task: Gradle@2
    displayName: Publish Release
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      tasks: 'publishProdReleaseBundle'

  # Publish Bundle
  - task: PublishPipelineArtifact@1
    displayName: Publish Bundle
    inputs:
      targetPath: '$(System.DefaultWorkingDirectory)/app/build/outputs/bundle/prodRelease'
      artifact: 'bundle'
      publishLocation: 'pipeline'

  # Publish Mapping
  - task: PublishPipelineArtifact@1
    displayName: Publish Mapping
    inputs:
      targetPath: '$(System.DefaultWorkingDirectory)/app/build/outputs/mapping/prodRelease'
      artifact: 'mapping'
      publishLocation: 'pipeline'

  # Clean Secret Files
  - script: |
      cp $(uploadKeystore.secureFilePath) $(System.DefaultWorkingDirectory)
      cp $(playAccount.secureFilePath) $(System.DefaultWorkingDirectory)
    displayName: 'Clean Secret Files'

  # Notify Release
  - task: Bash@3
    displayName: Notify Release
    inputs:
      targetType: 'inline'
      script: |
        slack_message_data='{"text":"Release"}'

        curl -X POST -H 'Content-type: application/json' --data "$slack_message_data" "$SLACK_WEBHOOK"
    env:
      SLACK_WEBHOOK: $(SLACK_WEBHOOK)
